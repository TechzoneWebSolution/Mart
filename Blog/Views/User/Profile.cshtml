@using Blog.Common;
@using Blog.Pages;
@using Blog.Infrastructure;
@using Blog.Entities.V1;
@Html.AntiForgeryToken()
@model User

@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <ul class="page-breadcrumb breadcrumb">
            <li>
                <span class="active" href="#">User Edit</span>
            </li>
        </ul>
        <!-- END PAGE BREADCRUMB -->
        <!-- BEGIN PAGE BASE CONTENT -->
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12">
                        <div class="portlet light bordered">
                            <div class="portlet-title">
                                <div class="caption font-dark">
                                    <i class="font-dark"></i>
                                    <span class="caption-subject bold uppercase">User Edit</span>
                                </div>
                            </div>
                            <div class="portlet-body">
                                @using (Html.BeginForm(Actions.UserEdit, Controllers.User, FormMethod.Post, new { enctype = "multipart/form-data", area = "", returnUrl = "", @id = "frmUser", @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                <div class="form-body">
                                    <div class="alert alert-danger display-hide">
                                        <button class="close" data-close="alert"></button> You have some form errors. Please check below.
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter First Name
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Please Enter First Name", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter Last Name
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Please Enter Last Name", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter Email
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Please Enter Email", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter Mobile
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control form-control-solid placeholder-no-fix", @onkeypress = "return isNumber(event)", @placeholder = "Please Enter Mobile", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter Address
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control form-control-solid placeholder-no-fix", @placeholder = "Please Enter Address", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Select state
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.StateId, (IEnumerable<SelectListItem>)ViewBag.State, "Select State", new { @class = "form-control select-cus" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Select District
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.DistrictId, (IEnumerable<SelectListItem>)ViewBag.District, "Select District", new { @class = "form-control select-cus distdisable" })
                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="offset-md-3 col-md-7" style="text-align:right">
                                                <button type="submit" class="btn green">Submit</button>
                                                <a href="@Url.Action(Actions.Index, Controllers.Dashboard )" title="Cancel" class="btn grey-salsa btn-outline">Cancel</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }
                                <!-- END FORM-->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- END EXAMPLE TABLE PORTLET-->
            </div>
        </div>
        <!-- END PAGE BASE CONTENT -->
    </div>
    <!-- END CONTENT BODY -->
</div>


<script type="text/javascript">


    jQuery(document).ready(function () {
        FormValidation.init();
        if ($("#StateId").val() > 0) {
            $("#DistrictId").removeClass("distdisable");
        }
    });

    var FormValidation = function () {
        // basic validation
        var handleValidation1 = function () {

            var form1 = $('#frmUser');
            var error1 = $('.alert-danger', form1);
            //var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                rules: {
                    Email: {
                        required: true,
                        email: true
                    },
                    FirstName: {
                        required: true,
                    },
                    LastName: {
                        required: true,
                    }, Mobile: {
                        required: true,
                        minlength: 10,
                        maxlength: 10,
                    },
                    Password: {
                        required: true
                    }, Address: {
                        required: true
                    }, StateId: {
                        required: true
                    }, DistrictId: {
                        required: true
                    }
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    //success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                    var cont = $(element).parent('.input-group');
                    if (cont.size() > 0) {
                        cont.after(error);
                    } else {
                        element.after(error);
                    }
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    error1.hide();
                    console.log($("#Id").val());
                    $("#Id").val((atob($("#Id").val())));
                    $("#frmUser").val((atob($("#frmUser").val())));
                    form.submit();
                    loaderon();
                }
            });
        }

        return {
            //main function to initiate the module
            init: function () {
                handleValidation1();
            }
        };
    }();
    
     $("#StateId").change(function () {
            var StateId = 0;
            if ($("#StateId").val() != "") {
                StateId = btoa($("#StateId").val());
                $('#DistrictId').prop("disabled", false);
                //$('#CompanyTalukaId').prop("disabled", true);

                $.ajax({
                    url: '@Url.Action(Actions.Search1, Controllers.Account, new { Area = ""})',
                    data: ({ StateId: StateId }),
                    type: 'Post',
                    datatype: 'json',
                    success: onSuccess,
                });1
            }
            else {
                var select = $("#DistrictId");
                select.empty();
                select.children().remove();
                select.append($("<option>").val("").text("Select District"));
                $("#DistrictId").addClass("distdisable");
            }
        });
        function onSuccess(responseText, statusText, xhr, $form) {
            if (responseText[2].length > 0) {
                var select = $("#DistrictId");

                select.empty();
                select.children().remove();
                select.append($("<option>").val("").text("Select District"));
                $(responseText[2]).each(function (index, item) {
                    select.append($("<option>").val(item.Value).text(item.Text));
                });
                $("#DistrictId").removeClass("distdisable");
            }
            else {
                var select = $("#DistrictId");
                select.empty();
                select.children().remove();
                select.append($("<option>").val("").text("Select District"));
                $("#DistrictId").addClass("distdisable");
            }
        }
</script>



