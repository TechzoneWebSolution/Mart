@using Blog.Common;
@using Blog.Pages;
@using Blog.Infrastructure;
@using Blog.Entities.V1;
@Html.AntiForgeryToken()
@model SubScription

@{
    ViewBag.Title = "SubScription";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <ul class="page-breadcrumb breadcrumb">
            <li>
                <span class="active" href="#">SubScription Add/Edit</span>
            </li>
        </ul>
        <!-- END PAGE BREADCRUMB -->
        <!-- BEGIN PAGE BASE CONTENT -->
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12">
                        <div class="portlet light bordered">
                            <div class="portlet-title">
                                <div class="caption font-dark">
                                    <i class="font-dark"></i>
                                    <span class="caption-subject bold uppercase">SubScription Add/Edit</span>
                                </div>
                            </div>
                            <div class="portlet-body">
                                @using (Html.BeginForm(Actions.SubScriptionAddEdit, Controllers.SubScription, FormMethod.Post, new { enctype = "multipart/form-data", area = "", returnUrl = "", @id = "frmSubscription", @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.SubjectIds)
                                <div class="form-body">
                                    <div class="alert alert-danger display-hide">
                                        <button class="close" data-close="alert"></button> You have some form errors. Please check below.
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Enter Subscription Name
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.SubscriptionName, new { @class = "form-control", placeholder = "Subscription Name", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Key
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @if (Model.Id > 0)
                                            {
                                                @Html.DisplayFor(model => model.Key, new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.Key, new { @class = "form-control", placeholder = "Key" })
                                            }

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Select Subject and Standard
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.SubjectId, (IEnumerable<SelectListItem>)ViewBag.Subject, "Select Subject and Standard", new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Actual Price
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.ActualPrice, new { @class = "form-control", placeholder = "Actual Price", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Offer Price
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.OfferPrice, new { @class = "form-control", placeholder = "Offer Price", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Expiry Date
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.ExpiryDate, new { @class = "form-control", placeholder = "Expiry Date", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            No of Days
                                            <span class="required"> * </span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.NoOfDays, new { @class = "form-control", placeholder = "No of Days", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            Description
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Description", @maxlength = "250" })
                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        <div class="row">
                                            <div class="offset-md-3 col-md-7" style="text-align:right">
                                                <button type="submit" class="btn green">Submit</button>
                                                <a href="@Url.Action(Actions.Index, Controllers.SubScription )" title="Cancel" class="btn grey-salsa btn-outline">Cancel</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }
                                <!-- END FORM-->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- END EXAMPLE TABLE PORTLET-->
            </div>
        </div>
        <!-- END PAGE BASE CONTENT -->
    </div>
    <!-- END CONTENT BODY -->
</div>


<script type="text/javascript">


    jQuery(document).ready(function () {
        FormValidation.init();
        $('#ExpiryDate').datetimepicker({
            useCurrent: false,
            format: 'DD/MM/YYYY hh:mm A',
            minDate: moment()
        });
    });

    var FormValidation = function () {
        // basic validation
        var handleValidation1 = function () {

            var form1 = $('#frmSubscription');
            var error1 = $('.alert-danger', form1);
            //var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                rules: {
                    SubscriptionName: {
                        required: true
                    },
                    SubjectId: {
                        required: true
                    },
                    ActualPrice: {
                        required: true
                    },
                    OfferPrice: {
                        required: true
                    },
                    ExpiryDate: {
                        required: true
                    },
                    NoOfDays: {
                        required: true
                    },
                    Key: {
                        required: true
                    },
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    //success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                    var cont = $(element).parent('.input-group');
                    if (cont.size() > 0) {
                        cont.after(error);
                    } else {
                        element.after(error);
                    }
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    error1.hide();
                    console.log($("#Id").val());
                    $("#Id").val((atob($("#Id").val())));
                    $("#frmSubscription").val((atob($("#frmSubscription").val())));
                    form.submit();
                    loaderon();
                }
            });
        }

        return {
            //main function to initiate the module
            init: function () {
                handleValidation1();
            }
        };
    }();

    $('#ActualPrice,#OfferPrice,#NoOfDays').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
            ((event.which < 48 || event.which > 57) &&
                (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if ((event.which == 46) && (text.indexOf('.') == -1)) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
        }

        if ((text.indexOf('.') != -1) &&
            (text.substring(text.indexOf('.')).length > 2) &&
            (event.which != 0 && event.which != 8) &&
            ($(this)[0].selectionStart >= text.length - 2)) {
            event.preventDefault();
        }
    });

</script>



