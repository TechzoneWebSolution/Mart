@using Blog.Common;
@using Blog.Pages;
@using Blog.Infrastructure;
@using Blog.Entities.V1;
@Html.AntiForgeryToken()
@model ProductStockLedger

@{
    ViewBag.Title = "Product Stock Ledger";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content-wrapper">
    <div class="page-content">
        <ul class="page-breadcrumb breadcrumb">
            <li>
                <a href="@Url.Action(Actions.Index, Controllers.Products, new { area = ""})">Products</a>
            </li>
            <li>
                <a href="@Url.Action(Actions.Index, Controllers.ProductStockLedger, new { area = "", ProductId = ViewBag.ProductId})">Product Stock Ledger</a>
            </li>
            <li>
                <span class="active" href="#">Product Stock Ledger Details</span>
            </li>
        </ul>
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12">
                        <div class="portlet light bordered">
                            <div class="portlet-title">
                                <div class="caption font-dark">
                                    <i class="font-dark"></i>
                                    <span class="caption-subject bold uppercase">Product Stock Ledger Details</span>
                                </div>
                            </div>
                            <div class="portlet-body">
                                @using (Html.BeginForm(Actions.AddEditProductStockLedger, Controllers.ProductStockLedger, FormMethod.Post, new { enctype = "multipart/form-data", area = "", returnUrl = "", @id = "frmState", @class = "form-horizontal" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.ProductIdstring, new { @Value = ViewBag.ProductId })
                                    <div class="form-body">
                                        <div class="alert alert-danger display-hide">
                                            <button class="close" data-close="alert"></button> You have some form errors. Please check below.
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">
                                                Price
                                                <span class="required"> * </span>
                                            </label>
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = "Please enter Price", autocomplete = "off" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">
                                                Selling Price
                                                <span class="required"> * </span>
                                            </label>
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(model => model.SellingPrice, new { @class = "form-control", placeholder = "Please enter Selling Price", autocomplete = "off" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">
                                                Stock
                                                <span class="required"> * </span>
                                            </label>
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", placeholder = "Please enter Stock", autocomplete = "off" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-md-3">
                                                Comment
                                                <span class="required"> * </span>
                                            </label>
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(model => model.CommentText, new { @class = "form-control", placeholder = "Please Comments", autocomplete = "off" })
                                            </div>
                                        </div>
                                        <div class="form-actions">
                                            <div class="row">
                                                <div class="offset-md-3 col-md-7" style="text-align:right">
                                                    <button type="submit" class="btn green">Submit</button>
                                                    <a href="@Url.Action(Actions.Index, Controllers.ProductStockLedger , new { area = "", ProductId =  Model.ProductId} )" title="Cancel" class="btn grey-salsa btn-outline">Cancel</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <!-- END FORM-->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- END EXAMPLE TABLE PORTLET-->
            </div>
        </div>
        <!-- END PAGE BASE CONTENT -->
    </div>
    <!-- END CONTENT BODY -->
</div>


<script type="text/javascript">


    jQuery(document).ready(function () {
        FormValidation.init();
        jQuery.validator.addMethod("nozero", function (value, element) {
            return value > 0;
        }, "This Field is Required.");
        jQuery.validator.addMethod("notlower", function (value, element) {
            return value > $("#Price").val();
        }, "Selling price not lower than price.");
    });

    var FormValidation = function () {
        var handleValidation1 = function () {
            var form1 = $('#frmState');
            var error1 = $('.alert-danger', form1);
            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                rules: {
                    Price: {
                        number: true,
                        nozero: true,
                    }, SellingPrice: {
                        number: true,
                        nozero: true,
                        notlower: true,
                    }, Stock: {
                        number: true,
                        nozero: true,
                    }, CommentText: {
                        required: true,
                    }
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    //success1.hide();
                    error1.show();
                    App.scrollTo(error1, -200);
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                    var cont = $(element).parent('.input-group');
                    if (cont.size() > 0) {
                        cont.after(error);
                    } else {
                        element.after(error);
                    }
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error'); // set success class to the control group
                },

                submitHandler: function (form) {
                    //success1.show();
                    error1.hide();
                    $("#Id").val((atob($("#Id").val())));
                    debugger;
                    $("#frmState").val((atob($("#frmState").val())));
                    form.submit();
                    loaderon();
                }
            });
        }

        return {
            //main function to initiate the module
            init: function () {
                handleValidation1();
            }
        };
    }();

</script>



